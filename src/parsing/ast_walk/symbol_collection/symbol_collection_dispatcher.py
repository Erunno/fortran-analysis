
from parsing.ast_walk.ast_nodes.expression_ast import DataRefNode, IntrinsicFunctionNode, LiteralNode, NameNode, OperatorNode, ParenthesisNode, PartRefNode, SubscriptTripletNode, UnaryOperatorNode
from parsing.ast_walk.ast_nodes.my_ats_node import AssignmentNode, CallNode, ForAllHeaderNode, ForAllTripletNode, ForLoopNode, FunctionDefinitionNode, IfBlockNode, LoopControlNode, ProcedureDesignatorNode, SubroutineDefinitionNode, WriteStdoutNode
from parsing.ast_walk.dispatcher import Dispatcher
from parsing.ast_walk.symbol_collection.symbol_collection import SymbolCollection
from parsing.ast_walk.symbol_collection.symbol_collection_handlers import AssignmentCollector, CallSubroutineCollector, DataRefCollector, ForAllHeaderCollector, ForAllTripletCollector, ForLoopCollector, FunctionDefinitionCollector, IfBlockCollector, IntrinsicFunctionCollector, LiteralCollector, LoopControlCollector, NameCollector, OperatorCollector, ParenthesisCollector, PartRefCollector, ProcedureDesignatorCollector, SubscriptTripleCollector, UnaryOperatorCollector, WriteStdoutCollector

collectors_dispatcher = Dispatcher[SymbolCollection]()

collectors_dispatcher.register(AssignmentCollector).for_node(AssignmentNode)
collectors_dispatcher.register(FunctionDefinitionCollector).for_node(FunctionDefinitionNode)
collectors_dispatcher.register(FunctionDefinitionCollector).for_node(SubroutineDefinitionNode)
collectors_dispatcher.register(CallSubroutineCollector).for_node(CallNode)
collectors_dispatcher.register(ForLoopCollector).for_node(ForLoopNode)
collectors_dispatcher.register(IfBlockCollector).for_node(IfBlockNode)
collectors_dispatcher.register(WriteStdoutCollector).for_node(WriteStdoutNode)
collectors_dispatcher.register(OperatorCollector).for_node(OperatorNode)
collectors_dispatcher.register(ParenthesisCollector).for_node(ParenthesisNode)
collectors_dispatcher.register(NameCollector).for_node(NameNode)
collectors_dispatcher.register(IntrinsicFunctionCollector).for_node(IntrinsicFunctionNode)
collectors_dispatcher.register(LiteralCollector).for_node(LiteralNode)
collectors_dispatcher.register(DataRefCollector).for_node(DataRefNode)
collectors_dispatcher.register(PartRefCollector).for_node(PartRefNode)
collectors_dispatcher.register(ProcedureDesignatorCollector).for_node(ProcedureDesignatorNode)
collectors_dispatcher.register(SubscriptTripleCollector).for_node(SubscriptTripletNode)
collectors_dispatcher.register(LoopControlCollector).for_node(LoopControlNode)
collectors_dispatcher.register(ForAllHeaderCollector).for_node(ForAllHeaderNode)
collectors_dispatcher.register(ForAllTripletCollector).for_node(ForAllTripletNode)
collectors_dispatcher.register(UnaryOperatorCollector).for_node(UnaryOperatorNode)
